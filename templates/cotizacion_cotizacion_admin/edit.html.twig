{% extends 'base_sonata_admin/edit.html.twig' %}

{% block stylesheets %}
    {{ parent() }}

    <style>
        tr.row-cotservicios{border-top: 3px solid rgba(0, 0, 0, 0.47);}
        tr.row-cotcomponentes td.campo-componente{background-color: rgba(0,172,214,0.18);}
        tr.row-cottarifas td.campo-tarifa{background-color: rgba(219,144,8,0.22);}
        tr.row-cottarifadetalles td.campo-detalle{background-color: rgba(22, 157, 28, 0.25);}
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">

        (function ($) {

            $.fn.cambiovalor = function () {

                var methods = {
                    init: function () {
                        //console.log('Llamado a cambiovalor.methods.init en: ' + $(this).attr("id"));
                        var $this = $(this);
                        //colocando attributo para no duplicar el metodo
                        if($this.attr('methodCambiovalorSeleccionar') === 'true'){
                            //    console.log('On change no necesario: ' + $(this).attr("id"));
                            return $this;
                        }else{
                            //    console.log('Seteando valor, methodCambiovalorSeleccionar variable: ' + $this.attr('methodCambiovalorSeleccionar') + ' en :' + $(this).attr("id"));
                            $this.attr('methodcambiovalorseleccionar', 'true');
                            $this.off("change", methods.seleccionar).on("change", methods.seleccionar);
                            return $this;
                        }
                    },
                    seleccionar: function (event) {
                        console.log('Llamado a cambiovalor.methods.seleccionar');

                        {% block selectorcambiovalor %}
                            var itinerarioregex = /cotservicios_\d*_itinerario_autocomplete_input$/g;
                            var servicioregex = /cotservicios_\d*_servicio_autocomplete_input$/g;
                            var componenteregex = /cotservicios_\d*_cotcomponentes_\d*_componente_autocomplete_input$/g;
                            var tarifaregex = /cotservicios_\d*_cotcomponentes_\d*_cottarifas_\d*_tarifa_autocomplete_input$/g;
                        {% endblock %}

                        if(itinerarioregex.test($(this).attr("id")) === true) {
                            console.log('Seleccionado procesaritinerario');
                            return methods.procesaritinerario.call(this, event);
                        }

                        if(servicioregex.test($(this).attr("id")) === true) {
                            console.log('Seleccionado procesarservicio');
                            return methods.procesarservicio.call(this, event);
                        }

                        if(componenteregex.test($(this).attr("id")) === true) {
                            console.log('Seleccionado procesarcomponete');
                            return methods.procesarcomponente.call(this, event);
                        }

                        if(tarifaregex.test($(this).attr("id")) === true) {
                            console.log('Seleccionado procesartarifa');
                            return methods.procesartarifa.call(this, event);
                        }
                    },
                    procesaritinerario: function (event) {
                        console.log('Llamado a cambiovalor.methods.procesaritinerario');
                        var url = "{{ path(admin.vars.cotservicios.itinerariopath) }}" + '/' + $(this).val();
                        $.ajax({
                            url:  url,
                            context: $(this),
                            success: function(result){
                                var basestr = $(this).attr("id").replace(/itinerario_autocomplete_input/g, '');
                                var fechaHoraInicioId = basestr + 'fechahorainicio';
                                var newFechaHoraInicio = $('input#' + fechaHoraInicioId).val().replace(/\d\d:\d\d$/g, result.hora);
                                var fechaHoraFinId = basestr + 'fechahorafin';
                                console.log('Colocando atributos a los campos duración: ' + result.duracion + ', hora de inicio: ' + result.hora + ', fechahoradeinicio: ' + newFechaHoraInicio);
                                $('input#' + fechaHoraFinId).attr('duracion', result.duracion);
                                $('div#field_container_' + basestr + 'cotcomponentes').find("input[horariodependiente*='horariodependiente']").attr('duracion', result.duracion);
                                //primero cambiamos la duración de componentes con horario dependiente
                                //para forzar cambio primero a '' y despues al valor

                                $('input#' + fechaHoraInicioId).attr('oldvalforfin', $('input#' + fechaHoraInicioId).val());
                                $('input#' + fechaHoraInicioId).attr('oldvalforcomponentes', $('input#' + fechaHoraInicioId).val());
                                $('input#' + fechaHoraFinId).val('');
                                $('input#' + fechaHoraInicioId).attr('duracion', result.duracion).val('').change().val(newFechaHoraInicio).change();

                            }}
                        );

                    },
                    procesarservicio: function (event) {

                        console.log('Llamado a cambiovalor.methods.procesarservicio');
                        var url = "{{ path(admin.vars.cotservicios.serviciopath) }}" + '/' + $(this).val();

                        $.ajax({
                            url:  url,
                            context: $(this),
                            success: function(result){

                                var fechaInicioServicioId = $(this).attr("id").replace(/servicio_autocomplete_input$/g, 'fechahorainicio');
                                console.log('Seleccionando toda la fila');
                                var filaActual = $(this).closest('tr');
                                var fecha = moment(moment(new Date()).format('YYYY/MM/DD'), 'YYYY/MM/DD').format('YYYY/MM/DD HH:mm');
                                var fechaActual = moment($('input#' + fechaInicioServicioId).val().substr(0, 10), 'YYYY/MM/DD').format('YYYY/MM/DD HH:mm');
                                if(filaActual.index() > 0){

                                    var filaOrigen = filaActual.prevAll().not(".splitted, .paralelo").first();

                                    if(result.paralelo === false && filaOrigen.length > 0 ){
                                        console.log('El servicio no es paralelo');
                                        fecha = moment($("input.serviciofechafin", filaOrigen).val().substr(0, 10), 'YYYY/MM/DD').format('YYYY/MM/DD');
                                        fecha = moment(fecha, 'YYYY/MM/DD').add(1, 'days').format('YYYY/MM/DD HH:mm');
                                    }else{
                                        console.log('El servicio es paralelo');
                                        filaOrigen = $(this).closest('tbody').children('tr').first();
                                        fecha = moment($("input.serviciofechainicio", filaOrigen).val().substr(0, 10), 'YYYY/MM/DD').format('YYYY/MM/DD HH:mm');
                                    }

                                    if(result.paralelo === false){
                                        console.log('El servicio no es paralelo, quitando clase');
                                        filaActual.removeClass('paralelo');
                                        $('input#' + fechaInicioServicioId).removeClass('paralelo');
                                    }else{
                                        console.log('El servicio es paralelo, agregando clase');
                                        filaActual.removeClass('paralelo').addClass('paralelo');
                                        $('input#' + fechaInicioServicioId).removeClass('paralelo').addClass('paralelo');
                                    }
                                }else{

                                    if($('input#' + fechaInicioServicioId).val() !== '' ){

                                        fecha = fechaActual;
                                        //tambien ejecuto ya que no se ejecutara después
                                        $('input#' + fechaInicioServicioId).attr('oldvalforfin', $('input#' + fechaInicioServicioId).val());
                                        $('input#' + fechaInicioServicioId.attr('oldvalforcomponentes', $('input#' + fechaInicioServicioId).val());

                                        console.log('La fecha es diferente ejecutando el cambio y trigger de manera anticipada');
                                        $('input#' + fechaInicioServicioId).val('').change().val(fecha).change();
                                    }
                                }

                                if(fecha !== fechaActual){
                                    $('input#' + fechaInicioServicioId).attr('oldvalforfin', $('input#' + fechaInicioServicioId).val());
                                    $('input#' + fechaInicioServicioId).attr('oldvalforcomponentes', $('input#' + fechaInicioServicioId).val());

                                    console.log('La fecha ' + fecha + ' es diferente a la fecha actual ' + fechaActual + ' ejecutando el cambio y trigger');
                                    $('input#' + fechaInicioServicioId).val('').change().val(fecha).change();
                                }
                            }}
                        );
                    },
                    procesarcomponente: function (event) {

                        console.log('Llamado a cambiovalor.methods.procesarcomponente');
                        var url = "{{ path(admin.vars.cotcomponentes.componentepath) }}" + '/' + $(this).val();

                        $.ajax({
                            url:  url,
                            context: $(this),
                            success: function(result){
                                var cantidadId = $(this).attr("id").replace(/componente_autocomplete_input$/g, 'cantidad');
                                var fechaInicioComponenteId = $(this).attr("id").replace(/componente_autocomplete_input$/g, 'fechahorainicio');
                                var fechaFinComponenteId = $(this).attr("id").replace(/componente_autocomplete_input$/g, 'fechahorafin');
                                var fecInicioServicioId = $(this).attr("id").replace(/cotcomponentes_\d*_componente_autocomplete_input$/g, 'fechahorainicio');
                                var fecFinServicioId = $(this).attr("id").replace(/cotcomponentes_\d*_componente_autocomplete_input$/g, 'fechahorafin');
                                if(result.duracion === null){
                                    console.log('Result duración es nulo, cambiando atributos, agregando horariodependiente y poniendo la duracion del servicio al componete como atributo: ' + $('input#' + fecInicioServicioId).attr('duracion'));
                                    //var minutos = moment($('input#' + fecFinServicioId).val(), 'YYYY/MM/DD HH:mm', true).diff(moment($('input#' + fecInicioServicioId).val(), 'YYYY/MM/DD HH:mm', true), 'minutes');
                                    $('input#' + fechaInicioComponenteId).removeAttr('horariodependiente').attr('horariodependiente', 'horariodependiente').removeAttr('duracion').attr('duracion', $('input#' + fecInicioServicioId).attr('duracion'));
                                    $('input#' + fechaFinComponenteId).removeAttr('horariodependiente').attr('horariodependiente', 'horariodependiente').removeAttr('duracion').attr('duracion', $('input#' + fecInicioServicioId).attr('duracion'));

                                }else{
                                    console.log('Result duración no es nulo, cambiando atributos, quitando horariodependiente y poniendo la duracion obtenida como atributo:' + result.duracion );
                                    $('input#' + fechaInicioComponenteId).removeAttr('horariodependiente').attr('duracion', result.duracion);
                                    $('input#' + fechaFinComponenteId).removeAttr('horariodependiente').attr('duracion', result.duracion);

                                }

                                //para forzar cambio primero a '' y despues al valor
                                console.log('Limpiamos la fecha de fin para reprocesar por duración, poniendo la fecha de inicio del servicio a la fecha de inicio del componente: ' + $('input#' + fecInicioServicioId).val());
                                $('input#' + fechaFinComponenteId).val('').change()
                                $('input#' + fechaInicioComponenteId).val('').change().val($('input#' + fecInicioServicioId).val()).change();

                                if(result.dependeduracion === true){

                                    var inicio = $('input#' + fechaInicioComponenteId).val().substr(0, 10);
                                    var fin = $('input#' + fechaFinComponenteId).val().substr(0, 10);

                                    var dias = moment(fin, 'YYYY/MM/DD', true).diff(moment(inicio, 'YYYY/MM/DD', true), 'days');

                                    console.log('Depende de la duración del servicio la cantidad es por los dias del servicio: ' + dias);
                                    if(dias < 1){
                                        dias = 1;
                                    }
                                    $('input#' + cantidadId).removeClass('dependeduracion').addClass('dependeduracion').val(dias).trigger('input');
                                }else{
                                    console.log('No depende de la duración del servicio la cantidad es 1');

                                    $('input#' + cantidadId).removeClass('dependeduracion').val(1).trigger('input');
                                }
                            }}
                        );
                    },
                    procesartarifa: function (event) {

                        console.log('Llamado a cambiovalor.methods.procesartarifa');

                        var url = "{{ path(admin.vars.cottarifas.tarifapath) }}" + '/' + $(this).val();

                        $.ajax({
                            url:  url,
                            context: $(this),
                            success: function(result){
                                var monedaId = $(this).attr("id").replace(/tarifa_autocomplete_input$/g, 'moneda');
                                var montoId = $(this).attr("id").replace(/tarifa_autocomplete_input$/g, 'monto');
                                var cantidadId = $(this).attr("id").replace(/tarifa_autocomplete_input$/g, 'cantidad');
                                var numeroPaxId = $(this).attr("id").replace(/cotservicios_\d*_cotcomponentes_\d*_cottarifas_\d*_tarifa_autocomplete_input$/g, 'numeropasajeros');
                                var tipotarifaId = $(this).attr("id").replace(/tarifa_autocomplete_input$/g, 'tipotarifa');
                                if(result.id){

                                    console.log('Se obtienen los valores monto :' + result.monto + ', moneda: ' + result.moneda + ', tipotarifa: ' + result.tipotarifa + ', prorrateado: ' + result.prorrateado + ', capacidadmax: ' + result.capacidadmax );

                                    $('input#' + montoId).val(result.monto).trigger('input');
                                    $('select#' + monedaId).val(result.moneda).trigger('change');
                                    $('select#' + tipotarifaId).val(result.tipotarifa).trigger('change');
                                    if(result.prorrateado === true){

                                        console.log('La tarifa se prorratea');

                                        var clase;

                                        if(result.capacidadmax === 1){

                                            console.log('Como tiene capacidadmax=1 se puede editar la cantidad');
                                            $('input#' + cantidadId).removeAttr("readonly");
                                            clase = 'inputwarning';
                                        }else{

                                            console.log('No se puede editar la cantidad');
                                            $('input#' + cantidadId).attr('readonly', 'readonly');
                                            clase = 'readonly';
                                        }
                                        $('input#' + cantidadId).removeClass('prorrateado').addClass('prorrateado').removeClass('inputwarning').removeClass('readonly').addClass(clase).val(1).trigger('input');

                                    }else{
                                        console.log('La tarifa no se prorratea');
                                        $('input#' + cantidadId).removeClass('prorrateado').removeClass('inputwarning').removeClass('readonly').removeAttr("readonly").val($('input#' + numeroPaxId).val()).trigger('input');
                                    }
                                }
                            }}
                        );
                    }
                };

                return $(this).each(function (i, element) {
                    methods.init.apply($(element));
                });
            };

            $.fn.cambiarComponenteCantidad = function () {

                var methods = {
                    init: function () {
                        //console.log('Llamado a cambiarComponenteCantidad.methods.init en: ' + $(this).attr("id"));
                        var $this = $(this);
                        //colocando attributo para no duplicar el metodo
                        if($this.attr('methodCambiarComponenteCantidadActualizar') === 'true'){
                            //console.log('On change no necesario: ' + $(this).attr("id"));
                            return $this;
                        }else{
                            //console.log('Seteando valor, methodCambiarComponenteCantidadActualizar variable: ' + $this.attr('methodCambiarComponenteCantidadActualizar') + ' en :' + $(this).attr("id"));
                            $this.attr('methodCambiarComponenteCantidadActualizar', 'true');
                            $this.off("input.componente").on("input.componente", methods.actualizar);
                            return $this;
                        }

                    },
                    initdatetime: function () {
                        //console.log('Llamado a cambiarComponenteCantidad.methods.initdatetime en: ' + $(this).attr("id"));
                        var $this = $(this);

                        if($this.attr('methodCambiarComponenteCantidadActualizardatetime') === 'true'){
                            //console.log('On change no necesario: ' + $(this).attr("id"));
                            return $this;
                        }else{
                            //console.log('Seteando valor, methodCambiarComponenteCantidadActualizardatetime variable: ' + $this.attr('methodCambiarComponenteCantidadActualizardatetime') + ' en :' + $(this).attr("id"));
                            $this.attr('methodCambiarComponenteCantidadActualizardatetime', 'true');
                            $this.off("dp.change.componente").on("dp.change.componente", methods.actualizardatetime);
                            return $this;
                        }
                    },
                    actualizardatetime: function (event){

                        return methods.seleccion.call($(this).find("input").first());
                    },
                    actualizar: function (event) {
                        return methods.seleccion.call($(this))
                    },
                    seleccion: function () {
                        //s5a43ceaa838b4[cotizaciones][0][cotservicios][0][cotcomponentes][0][cantidad]
                        //s5a43ceaa838b4[cotizaciones][0][cotservicios][0][fechahorainicio]
                        var inicio;
                        var fin;
                        if (/\[cotcomponentes\]\[\d*\]\[fechahorainicio\]$/g.test($(this).attr("name"))) {
                            var basestr = $(this).attr("name").replace( /\[fechahorainicio\]$/g, '');
                            inicio = $(this).val();
                            fin = $('input[name=' + $(this).attr("name").replace( /\[fechahorainicio\]/g, '[fechahorafin]').replace(/\[/g, '\\\[').replace(/\]/g, '\\\]') + ']').val();
                            return methods.cambiarcantidad.call($(this), basestr, inicio, fin)
                        }
                        if (/\[cotcomponentes\]\[\d*\]\[fechahorafin\]$/g.test($(this).attr("name"))) {
                            var basestr = $(this).attr("name").replace( /\[fechahorafin\]$/g, '');
                            //var cadena = $(this).attr("name").replace( /\[fechahorafin\]/g, '[cotcomponentes][\\d*][cantidad]').replace(/\[/g, '\\[').replace(/\]/g, '\\]');
                            inicio = $('input[name=' + $(this).attr("name").replace( /\[fechahorafin\]/g, '[fechahorainicio]').replace(/\[/g, '\\\[').replace(/\]/g, '\\\]') + ']').val();
                            fin = $(this).val();
                            return methods.cambiarcantidad.call($(this), basestr, inicio, fin)
                        }

                    },
                    cambiarcantidad: function(basestr, inicio, fin){
                        var cadena = (basestr + '[cantidad]').replace(/\[/g, '\\[').replace(/\]/g, '\\]');

                        var inputCantidad = $('input').filter(function () {
                            if($(this).attr('name') && $(this).hasClass('dependeduracion') ){
                                return $(this).attr('name').match(new RegExp(cadena));
                            }
                        });

                        inputCantidad.each(function (index, value){
                            var dias = moment(fin.substr(0, 10), 'YYYY/MM/DD').diff(moment(inicio.substr(0, 10), 'YYYY/MM/DD'), 'days');
                            if(dias < 1){
                                dias = 1;
                            }
                            $(this).val(dias).trigger('input');
                        });
                    }
                };
                return $(this).each(function (i, element) {
                    methods.init.apply($(element));
                    methods.initdatetime.apply($(element).parent());
                });
            };

            $.fn.actualizarFechaHora = function () {

                var methods = {
                    init: function () {
                        var $this = $(this);
                        //console.log('Llamado a actualizarFechaHora.methods.init en: ' + $(this).attr("id"));

                        if($this.attr('methodActualizarFechaHoraActualizar') === 'true'){
                            //console.log('On change no necesario: ' + $(this).attr("id"));
                            return $this;
                        }else{
                            //console.log('Seteando valor, methodActualizarFechaHoraActualizar variable: ' + $this.attr('methodActualizarFechaHoraActualizar') + ' en :' + $(this).attr("id"));
                            $this.attr('methodActualizarFechaHoraActualizar', 'true');
                            $this.off("input.fechahora").on("input.fechahora", methods.actualizar);
                            $this.off("focus.fechahora").on("focus.fechahora", methods.savecurrent);
                            return $this;
                        }
                    },
                    initdatetime: function () {
                        var $this = $(this);
                        //console.log('Llamado a actualizarFechaHora.methods.initdatetime en: ' + $(this).attr("id"));

                        if($this.attr('methodActualizarFechaHoraActualizardatetime') === 'true'){
                            //console.log('On change no necesario: ' + $(this).attr("id"));
                            return $this;
                        }else{
                            //console.log('Seteando valor, methodActualizarFechaHoraActualizardatetime variable: ' + $this.attr('methodActualizarFechaHoraActualizardatetime') + ' en :' + $(this).attr("id"));
                            $this.attr('methodActualizarFechaHoraActualizardatetime', 'true');
                            $this.off("dp.show.fechahora").on("dp.show.fechahora", methods.focusdatetime);
                            $this.off("dp.change.fechahora").on("dp.change.fechahora", methods.actualizardatetime);
                            return $this;
                        }
                    },
                    focusdatetime: function (event){
                        console.log('Llamado a actualizarFechaHora.methods.focusdatetime');
                        return $(this).find("input").first().trigger("focus");
                    },
                    savecurrent: function (event){
                        console.log('Llamado a actualizarFechaHora.methods.savecurrent');
                        $(this).attr('oldvalforfin', $(this).val());
                        $(this).attr('oldvalforcomponentes', $(this).val());
                    },
                    actualizardatetime: function (event){
                        console.log('Llamado a actualizarFechaHora.methods.actualizardatetime');
                        return methods.seleccion.call($(this).find("input").first(), true);
                    },
                    actualizar: function (event) {

                        var $this = $(this);

                        console.log('Llamado a actualizarFechaHora.methods.actualizar');
                        return methods.seleccion.call($this, false)

                        /*var timer, delay = 700;

                        clearTimeout(timer);
                        timer = setTimeout(function() {
                            console.log('Llamado a actualizarFechaHora.methods.actualizar');
                            return methods.seleccion.call($this, false)
                        }, delay );*/

                    },
                    seleccion: function (deBoton) {
                        console.log('Llamado a actualizarFechaHora.methods.seleccion var deBoton:' + deBoton);

                        var inicio;
                        var basestr;
                        if ({% block condicionalfechahorainicio %}/\[cotservicios\]\[\d*\]\[fechahorainicio\]$/g.test($(this).attr("name")){% endblock %}) {
                            console.log('Coincidencia con cotservicios fechahorainicio');
                            basestr = $(this).attr("name").replace( /\[fechahorainicio\]$/g, '');
                            inicio = $(this).val();
                            methods.cambiarfechafin.call($(this), basestr, inicio)
                            return methods.cambiarfechacomponente.call($(this), basestr, inicio, deBoton);
                        }
                        if ({% block condicionalfechahorafin %}/\[cotservicios\]\[\d*\]\[fechahorafin\]$/g.test($(this).attr("name")){% endblock %}) {
                            console.log('Coincidencia con cotservicios fechahorafin');
                            basestr = $(this).attr("name").replace( /\[fechahorafin\]$/g, '');
                            fin = $(this).val();
                            return methods.finservicioafincomponente.call($(this), basestr, fin);
                        }
                        if (/\[cotcomponentes\]\[\d*\]\[fechahorainicio\]$/g.test($(this).attr("name"))) {
                            console.log('Coincidencia con cotcomponetes fechahorainicio');
                            basestr = $(this).attr("name").replace( /\[fechahorainicio\]$/g, '');
                            inicio = $(this).val();
                            return methods.cambiarfechafin.call($(this), basestr, inicio)
                        }
                    },
                    finservicioafincomponente: function (basestr, fin) {
                        console.log('Llamado a actualizarFechaHora.methods.finserviciosafincomponete');
                        {% block finservicioafincomponentebasestr %}
                            basestr = basestr.replace( /\]\[/g, '_').replace( /\]/g, '_').replace( /\[/g, '_');
                        {% endblock %}

                    },
                    cambiarfechafin: function (basestr, inicio) {
                        console.log('Llamado a actualizarFechaHora.methods.cambiarfechafin');

                        var selector = $(this);
                        var timestampselector = Date.parse(selector.val());

                        if(selector.val().length !== 16 || isNaN(timestampselector) ){
                            return;
                        }

                        var newdatetime = new Date(selector.val());
                        var olddatetime = new Date(selector.attr('oldvalforfin'));

                        var diffDate = (newdatetime - olddatetime);

                        var cadenaFin = (basestr + '[fechahorafin]');
                        var fin = $('input[name=' + cadenaFin.replace(/\[/g, '\\\[').replace(/\]/g, '\\\]') + ']');

                        if (typeof fin.attr("duracion") !== 'undefined'){

                            var timestampfin = Date.parse(fin.val());
                            var newFechaHoraFin;
                            if(isNaN(diffDate) === true || isNaN(timestampfin)){
                                newFechaHoraFin = moment(inicio,'YYYY/MM/DD HH:mm').add(fin.attr("duracion"), 'hours').format('YYYY/MM/DD HH:mm');
                                console.log('Cambiando la fechahorafin de acuerdo a la duración');
                                fin.val(newFechaHoraFin).trigger('change');
                            }else{
                                newFechaHoraFin = new Date(new Date(fin.val()).getTime() + diffDate);
                                console.log('Cambiando la fechahorafin de acuerdo la fecha anterior');
                                fin.val(moment(newFechaHoraFin).format('YYYY/MM/DD HH:mm')).trigger('change');
                            }
                            //actualizamos por la doble ejecucion
                            console.log('Actualizamos el valor de oldvarforfin a ' + selector.val());
                            selector.attr('oldvalforfin', selector.val());
                        }
                    },
                    cambiarfechacomponente: function (basestr, inicio, deBoton) {

                        var selector = $(this);
                        console.log('Llamado a actualizarFechaHora.methods.cambiarfechacomponente');

                        //cambio al perder el foco que el dropdown hace dp.change
                        if(deBoton === false){
                            console.log('Variable deBoton=false retornando (se hace la operacion al perder el foco o usar el boton)');
                            return
                        }

                        var cadenaInicio = (basestr + '[cotcomponentes][\\d*][fechahorainicio]').replace(/\[/g, '\\[').replace(/\]/g, '\\]');

                        var inputFechaInicio = $('input').filter(function () {
                            if($(this).attr('name')){
                                console.log('Filtradas las fechas de inicio de los componentes, se selecciona solo la que coincide con le expresion regular: ' + cadenaInicio);
                                return $(this).attr('name').match(new RegExp(cadenaInicio));
                            }
                        });

                        var cadenaFin = (basestr + '[cotcomponentes][\\d*][fechahorafin]').replace(/\[/g, '\\[').replace(/\]/g, '\\]');

                        var inputFechaFin = $('input').filter(function () {

                            if($(this).attr('name')){
                                console.log('Filtradas las fechas de fin de los componentes, se selecciona solo la que coincide con le expresión regular: ' + cadenaInicio);
                                return $(this).attr('name').match(new RegExp(cadenaFin));
                            }
                        });

                        //retornar si no tiene componentes
                        if (inputFechaInicio.length < 1 || inputFechaFin < 1 ){
                            console.log('No tiene componentes, retornando');
                            return;
                        }

                        bootbox.confirm({
                            message: "Que acción desea realizar?",
                            buttons: {
                                confirm: {
                                    label: 'Mantener hora de componentes',
                                    className: 'btn-success'
                                },
                                cancel: {
                                    label: 'Actualizar hora de componentes',
                                    className: 'btn-warning'
                                }
                            },
                            callback: function (result) {

                                var newdatetime = new Date(selector.val());
                                var olddatetime = new Date(selector.attr('oldvalforcomponentes'));



                                var diffDate = (newdatetime - olddatetime);

                                if(result === false){
                                    console.log('Respuesta "Actualizar hora de componentes", cambiando todas las fechas y horas de los componentes');
                                    inputFechaInicio.each(function (index, value){

                                        if (typeof $(this).attr("duracion") !== 'undefined'){

                                            var componentdatetime = new Date(new Date($(this).val()).getTime() + diffDate);

                                            console.log('newdatetime ' + newdatetime);
                                            console.log('olddatetime ' + olddatetime);
                                            console.log('diffdate ' + diffDate);
                                            console.log('componentdatetime ' + componentdatetime);

                                            var componentdatetimeformat = moment(componentdatetime).format('YYYY/MM/DD HH:mm');
                                            console.log('Tiene duración (' + $(this).attr("duracion") +'), cambiando fecha inicio a ' + componentdatetimeformat );

                                            $(this).val(componentdatetimeformat).trigger('change');
                                        }
                                    });

                                } else {
                                    console.log('Respuesta "Mantener hora de componentes", cambiando solo las fecha');
                                    inputFechaInicio.each(function (index, value){

                                        if (typeof $(this).attr("duracion") !== 'undefined'){
                                            console.log('Tiene duración (' + $(this).attr("duracion") +'), cambiando fecha inicio');
                                            var horaAnterior = $(this).val().substr(-5, 5);
                                            var componentdatetime = new Date(new Date($(this).val()).getTime() + diffDate);
                                            var nuevaFecha = moment(componentdatetime).format('YYYY/MM/DD HH:mm').substr(0, 11);

                                            $(this).val(nuevaFecha + horaAnterior).trigger('change');
                                        }
                                    });

                                }
                                //actualizamos por la doble ejecucion
                                console.log('Actualizamos el valor de oldvarforcomponentes a ' + selector.val());
                                selector.attr('oldvalforcomponentes', selector.val());
                            }
                        });
                    }
                };

                return $(this).each(function (i, element) {
                    methods.init.apply($(element));
                    methods.initdatetime.apply($(element).parent());
                });

            };

        })(jQuery);

        $(document).ready(function(){
            console.log('Documento listo, configurando cambiovalor para Select');
            $('select').cambiovalor();
            console.log('Documento listo, configurando cambiarComponenteCantidad y actualizarFechaHora para input');
            $('input[name$="[fechahorainicio]"], input[name$="[fechahorafin]"]').cambiarComponenteCantidad().actualizarFechaHora();

            $('body').on('sonata.add_element', function() {
                console.log('Elemento agregado, configurando cambiovalor para Select');
                $('select').cambiovalor();
                console.log('Elemento agregado, configurando cambiarComponenteCantidad y actualizarFechaHora para input');
                $('input[name$="[fechahorainicio]"], input[name$="[fechahorafin]"]').cambiarComponenteCantidad().actualizarFechaHora();
            });
        });

    </script>

{% endblock %}