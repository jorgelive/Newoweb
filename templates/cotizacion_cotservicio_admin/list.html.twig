{% extends '@SonataAdmin/CRUD/base_list.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <style>

    </style>
{% endblock %}


{% block javascripts %}
    {{ parent() }}

    <script type="text/javascript">

        (function ($) {

            $.fn.cambiovalor = function () {

                var methods = {
                    init: function () {
                        var $this = $(this);
                        //console.log('Llamado a actualizarFechaHora.methods.init en: ' + $(this).attr("id"));

                        if($this.attr('methodActualizarFechaHoraActualizar') === 'true'){
                            //console.log('On change no necesario: ' + $(this).attr("id"));
                            return $this;
                        }else{
                            //console.log('Seteando valor, methodActualizarFechaHoraActualizar variable: ' + $this.attr('methodActualizarFechaHoraActualizar') + ' en :' + $(this).attr("id"));
                            $this.attr('methodActualizarFechaHoraActualizar', 'true');
                            $this.off("input.fechahora").on("input.fechahora", methods.actualizar);
                            $this.off("focus.fechahora").on("focus.fechahora", methods.savecurrent);
                            return $this;
                        }
                    },
                    initdatetime: function () {
                        var $this = $(this);
                        //console.log('Llamado a actualizarFechaHora.methods.initdatetime en: ' + $(this).attr("id"));

                        if($this.attr('methodActualizarFechaHoraActualizardatetime') === 'true'){
                            //console.log('On change no necesario: ' + $(this).attr("id"));
                            return $this;
                        }else{
                            //console.log('Seteando valor, methodActualizarFechaHoraActualizardatetime variable: ' + $this.attr('methodActualizarFechaHoraActualizardatetime') + ' en :' + $(this).attr("id"));
                            $this.attr('methodActualizarFechaHoraActualizardatetime', 'true');
                            $this.off("dp.show.fechahora").on("dp.show.fechahora", methods.focusdatetime);
                            $this.off("dp.change.fechahora").on("dp.change.fechahora", methods.actualizardatetime);
                            return $this;
                        }
                    },
                    focusdatetime: function (event){
                        console.log('Llamado a actualizarFechaHora.methods.focusdatetime');
                        return $(this).find("input").first().trigger("focus");
                    },
                    savecurrent: function (event){
                        console.log('Llamado a actualizarFechaHora.methods.savecurrent');
                        $(this).attr('oldvalforinicioend', $(this).val());
                    },
                    actualizardatetime: function (event){
                        console.log('Llamado a actualizarFechaHora.methods.actualizardatetime');
                        return methods.seleccion.call($(this).find("input").first(), true);
                    },
                    actualizar: function (event) {

                        var $this = $(this);

                        console.log('Llamado a actualizarFechaHora.methods.actualizar');
                        return methods.seleccion.call($this, false)
                    },
                    seleccion: function (deBoton) {
                        console.log('Llamado a actualizarFechaHora.methods.seleccion var deBoton:' + deBoton);

                        var inicio;
                        var basestr;

                        if (/\[fechahorainicio\]\[value\]\[start\]$/g.test($(this).attr("name"))) {
                            console.log('Coincidencia con fechahorainicio start');
                            basestr = $(this).attr("name").replace( /\[start\]$/g, '');
                            inicio = $(this).val();
                            return methods.cambiarfechafin.call($(this), basestr, inicio)
                        }
                    },
                    cambiarfechafin: function (basestr, inicio) {
                        console.log('Llamado a actualizarFechaHora.methods.cambiarfechafin');

                        var selector = $(this);
                        var timestampselector = Date.parse(selector.val());

                        if(selector.val().length !== 10 || isNaN(timestampselector) ){
                            return;
                        }

                        var cadenaFin = (basestr + '[end]');

                        var fin = $('input[name=' + cadenaFin.replace(/\[/g, '\\\[').replace(/\]/g, '\\\]') + ']');

                        fin.val(selector.val()).trigger('change');

                        //actualizamos por la doble ejecuci√≥n
                        console.log('Actualizamos el valor de oldvarforfin a ' + selector.val());
                        selector.attr('oldvalforinicioend', selector.val());
                    }
                };

                return $(this).each(function (i, element) {
                    methods.init.apply($(element));
                    methods.initdatetime.apply($(element).parent());
                });
            };
        })(jQuery);

        $(document).ready(function(){
            $('input').cambiovalor();

            $('body').on('sonata.add_element', function() {
                $('input').cambiovalor();
            });
        });
    </script>

{% endblock %}

{% block sonata_admin_content %}

    {% if admin.listmode == 'mosaic' %}
        {% block notice %}
            {% include '@SonataTwig/FlashMessage/render.html.twig' %}
        {% endblock notice %}
        {{ fullcalendar('cotizacion_cotservicio_admin', {'Aceptado' : 'cotizacion_servicio_aceptado_link_servicio', 'Aceptado y efectuado' : 'cotizacion_servicio_aceptado_efectuado_link_servicio'}, 'dayGridMonth', {1 : 'timeGridWeek', 2 : 'dayGridMonth', 3 : 'listMonth', 4 : 'resourceTimelineOneDay'}) }}
    {% else %}
        {{ parent() }}
    {% endif %}

{% endblock %}