<?php

namespace App\Repository;
use App\Entity\CotizacionEstadocotizacion;
use App\Entity\UserUser;
use Symfony\Component\HttpKernel\Exception\HttpException;

/**
 * CotcomponenteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CotizacionCotcomponenteRepository extends \Doctrine\ORM\EntityRepository
{
    public function findCalendarAceptado($data)
    {

        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('cc')
            ->from('App\Entity\CotizacionCotcomponente', 'cc')
            ->innerJoin('cc.cotservicio', 'cs')
            ->innerJoin('cs.cotizacion', 'cot')
            ->where('cc.fechahorafin >= :firstDate AND cc.fechahorainicio <= :lastDate')
            ->andWhere('cot.estadocotizacion = 3');


        $qb->setParameter('firstDate', $data['from'])
            ->setParameter('lastDate', $data['to']);

        /** @var UserUser|null $user */
        $user = $data['user'] ?? null;
        if ($user instanceof UserUser) {
            // Ejemplos (ajusta a tu modelo):
            /*
            $depId = $user->getDependencia()?->getId();
            if ($depId !== null && $depId !== 1) {
                $qb->andWhere('IDENTITY(me.dependencia) = :depId')
                    ->setParameter('depId', $depId);
            }

            $conductorId = $user->getConductor()?->getId();
            if ($conductorId !== null) {
                $qb->andWhere('IDENTITY(me.conductor) = :conductorId')
                    ->setParameter('conductorId', $conductorId);
            }
            */
        }

        return $qb;

    }

    public function findCalendarAceptadoEfectuado($data)
    {

        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('cc')
            ->from('App\Entity\CotizacionCotcomponente', 'cc')
            ->innerJoin('cc.cotservicio', 'cs')
            ->innerJoin('cs.cotizacion', 'cot')
            ->where('cc.fechahorafin >= :firstDate AND cc.fechahorainicio <= :lastDate')
            ->andWhere('cot.estadocotizacion IN (:estados)');


        $qb->setParameter('firstDate', $data['from'])
            ->setParameter('lastDate', $data['to'])
            ->setParameter('estados', [CotizacionEstadocotizacion::DB_VALOR_CONFIRMADO, CotizacionEstadocotizacion::DB_VALOR_OPERADO]);

        /** @var UserUser|null $user */
        $user = $data['user'] ?? null;
        if ($user instanceof UserUser) {
            // Ejemplos (ajusta a tu modelo):
            /*
            $depId = $user->getDependencia()?->getId();
            if ($depId !== null && $depId !== 1) {
                $qb->andWhere('IDENTITY(me.dependencia) = :depId')
                    ->setParameter('depId', $depId);
            }

            $conductorId = $user->getConductor()?->getId();
            if ($conductorId !== null) {
                $qb->andWhere('IDENTITY(me.conductor) = :conductorId')
                    ->setParameter('conductorId', $conductorId);
            }
            */
        }

        return $qb;

    }
}
